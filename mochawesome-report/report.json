{
  "stats": {
    "suites": 6,
    "tests": 11,
    "passes": 8,
    "pending": 0,
    "failures": 3,
    "start": "2023-12-26T18:13:55.089Z",
    "end": "2023-12-26T20:03:24.301Z",
    "duration": 2753,
    "testsRegistered": 11,
    "passPercent": 72.72727272727273,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "34a6b6d6-12ee-43ea-8fef-697e0851eb2e",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 452,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "throw err;",
          "err": {
            "message": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at ./cypress/support/commands.js (webpack://teste-api-cypress/./cypress/support/commands.js:55:42)\n    at __webpack_require__ (webpack://teste-api-cypress/webpack/bootstrap:19:0)\n    at eval (webpack://teste-api-cypress/./cypress/support/e2e.js:17:0)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:120:3)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:122:12)\n    at eval (<anonymous>)",
            "diff": null
          },
          "uuid": "e31e0380-a2ad-4ba6-abae-776b18b6d72c",
          "parentUUID": "34a6b6d6-12ee-43ea-8fef-697e0851eb2e",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "e31e0380-a2ad-4ba6-abae-776b18b6d72c"
      ],
      "pending": [],
      "skipped": [],
      "duration": 452,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "b23d0234-6b45-4a52-b491-f1449f81104d",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 488,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "throw err;",
          "err": {
            "message": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at ./cypress/support/commands.js (webpack://teste-api-cypress/./cypress/support/commands.js:55:42)\n    at __webpack_require__ (webpack://teste-api-cypress/webpack/bootstrap:19:0)\n    at eval (webpack://teste-api-cypress/./cypress/support/e2e.js:17:0)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:120:3)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:122:12)\n    at eval (<anonymous>)",
            "diff": null
          },
          "uuid": "cc54fd85-57ed-4e23-a127-6e66504c2e35",
          "parentUUID": "b23d0234-6b45-4a52-b491-f1449f81104d",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "cc54fd85-57ed-4e23-a127-6e66504c2e35"
      ],
      "pending": [],
      "skipped": [],
      "duration": 488,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    },
    {
      "uuid": "f3d8058b-41e4-4506-97d2-a2fed56329d7",
      "title": "",
      "fullFile": "cypress\\e2e\\exercicio-api.cy.js",
      "file": "cypress\\e2e\\exercicio-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "668b47b4-95ff-4b04-bc53-db778c914b48",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 154,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//TODO:",
              "err": {},
              "uuid": "3fc823f9-cf80-43e3-9ce4-c3bd462b15ac",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('usuarios');\n});",
              "err": {},
              "uuid": "19740db5-822c-4912-977e-723448a272bb",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = `usuario` + `${Math.floor(Math.random() * 100000)}`;\nlet email = `${usuario}@qa.com.br`;\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": usuario,\n    \"email\": email,\n    \"password\": \"teste\",\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "ffd44ac7-f539-4bff-ad14-70be6fb67d8d",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": 'Fulano da Silva',\n    \"email\": 'beltanoqa.com.br',\n    \"password\": \"teste\",\n    \"administrador\": \"true\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.email).to.equal('email deve ser um email válido');\n});",
              "err": {},
              "uuid": "5ac2dc79-4a64-431b-938e-ef219789521c",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = `usuario` + `${Math.floor(Math.random() * 100000)}`;\nlet email = `${usuario}@qa.com.br`;\ncy.cadastrarUsuario(usuario, email, 'teste').then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": usuario,\n      \"email\": email,\n      \"password\": \"teste\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "0c0d669d-58dc-4a48-9672-48c8a04d8740",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let usuario = `usuario` + `${Math.floor(Math.random() * 100000)}`;\nlet email = `${usuario}@qa.com.br`;\ncy.cadastrarUsuario(usuario, email, 'teste').then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": usuario,\n      \"email\": email,\n      \"password\": \"teste\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "cc5175ec-0bd0-4b05-bfc1-5f8d6bd2eb69",
              "parentUUID": "668b47b4-95ff-4b04-bc53-db778c914b48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fc823f9-cf80-43e3-9ce4-c3bd462b15ac",
            "19740db5-822c-4912-977e-723448a272bb",
            "ffd44ac7-f539-4bff-ad14-70be6fb67d8d",
            "5ac2dc79-4a64-431b-938e-ef219789521c",
            "0c0d669d-58dc-4a48-9672-48c8a04d8740",
            "cc5175ec-0bd0-4b05-bfc1-5f8d6bd2eb69"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 516,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "45f1f159-2624-4df6-99ea-7fe5812e6281",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3abc02d7-eada-46ac-8390-ee3febe85a33",
          "title": "Login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve fazer login com sucesso",
              "fullTitle": "Login Deve fazer login com sucesso",
              "timedOut": null,
              "duration": 184,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'login',\n  body: {\n    \"email\": \"Kari@gmail.com.br\",\n    \"password\": \"teste\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Login realizado com sucesso');\n  cy.log(response.body.authorization);\n});",
              "err": {},
              "uuid": "cae49ac0-3b49-468b-b097-6f35168c046a",
              "parentUUID": "3abc02d7-eada-46ac-8390-ee3febe85a33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cae49ac0-3b49-468b-b097-6f35168c046a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4bbd1009-4257-4820-86d1-b815e7f22554",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e2c5f1a3-462b-4470-9cbd-209b7859615b",
          "title": "Testes da Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve editar um produto já cadastrado",
              "fullTitle": "Testes da Funcionalidade Produtos Deve editar um produto já cadastrado",
              "timedOut": null,
              "duration": 286,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": \"Produto Editado 45642083\",\n      \"preco\": 100,\n      \"descricao\": \"Produto editado\",\n      \"quantidade\": 100\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "e076fcfc-91e5-41d6-a8c3-20473464e45b",
              "parentUUID": "e2c5f1a3-462b-4470-9cbd-209b7859615b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e076fcfc-91e5-41d6-a8c3-20473464e45b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9ea5b863-74f3-4338-8953-6feab408c961",
      "title": "",
      "fullFile": "cypress\\e2e\\exercicio-api.cy.js",
      "file": "cypress\\e2e\\exercicio-api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "An uncaught error was detected outside of a test",
          "fullTitle": "An uncaught error was detected outside of a test",
          "timedOut": null,
          "duration": 827,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "throw err;",
          "err": {
            "message": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.",
            "estack": "ReferenceError: The following error originated from your test code, not from Cypress.\n\n  > nome is not defined\n\nWhen Cypress detects uncaught errors originating from your test code it will automatically fail the current test.\n\nCypress could not associate this error to any specific test.\n\nWe dynamically generated a new test to display this failure.\n    at ./cypress/support/commands.js (webpack://teste-api-cypress/./cypress/support/commands.js:55:42)\n    at __webpack_require__ (webpack://teste-api-cypress/webpack/bootstrap:19:0)\n    at eval (webpack://teste-api-cypress/./cypress/support/e2e.js:17:0)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:120:3)\n    at eval (http://localhost:3000/__cypress/tests?p=cypress\\support\\e2e.js:122:12)\n    at eval (<anonymous>)",
            "diff": null
          },
          "uuid": "2cfb531e-b9ef-4d80-8586-f8247db07754",
          "parentUUID": "9ea5b863-74f3-4338-8953-6feab408c961",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "2cfb531e-b9ef-4d80-8586-f8247db07754"
      ],
      "pending": [],
      "skipped": [],
      "duration": 827,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}